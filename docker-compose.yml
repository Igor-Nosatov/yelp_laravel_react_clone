version: "3"

services:
  app:
    build: docker/php
    container_name: app
    ports:
      - 9000:9000
    restart: always
    tty: true
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini`
    depends_on:
      - dbmysql
    networks:
      - app-network

  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - ${WEB_SERVER_PORT}:80
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    depends_on:
      - app
      - dbmysql
    networks:
      - app-network

  dbmysql:
    image: mysql:8
    command: --default-authentication-plugin=mysql_native_password
    container_name: mysql
    restart: always
    tty: true
    environment:
      MYSQL_DATABASE: 'management_system'
      MYSQL_USER: 'admin'
      MYSQL_PASSWORD: 'waefmk4awegr3w'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - ./:/var/www
    networks:
      - app-network

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    tty: true
    entrypoint: redis-server --appendonly yes --requirepass $REDIS_PASSWORD --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - $DOCKERDIR/appdata/redis/data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3.10.7-management
    container_name: 'rabbitmq'
    restart: always
    tty: true
    environment:
      - RABBITMQ_DEFAULT_USER=rmuser
      - RABBITMQ_DEFAULT_PASS=rmpassword
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    networks:
      - app-network

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    restart: always
    tty: true
    environment:
      - MONGO_INITDB_ROOT_USERNAME=app_user
      - MONGO_INITDB_ROOT_PASSWORD=app_password
      - MONGO_INITDB_DATABASE=admin
    ports:
      - "27017:27017"
    volumes:
      - ~/mongo:/data/db
    networks:
      - app-network

volumes:
  dbdata:
    driver: local

networks:
  app-network:
    driver: bridge

